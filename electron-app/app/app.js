// ============================================
// –í–ò–†–¢–£–ê–õ–¨–ù–ê–Ø –õ–ê–ë–û–†–ê–¢–û–†–ò–Ø –§–ò–ó–ò–ö–ò - –ì–õ–ê–í–ù–´–ô –≠–ö–†–ê–ù
// JavaScript Controller
// ============================================

/**
 * –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è HTML
 * –ó–∞—â–∏—Ç–∞ –æ—Ç XSS –∞—Ç–∞–∫
 */
function escapeHtml(text) {
    if (typeof text !== 'string') {
        return String(text);
    }
    const div = document.createElement('div');
    div.textContent = text;
    return div.innerHTML;
}

class MainScreenController {
    constructor() {
        this.kits = this.initializeKits();
        this.currentProgress = this.loadProgress();
        this.init();
    }

    // ============================================
    // –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø
    // ============================================
    init() {
        this.setupHeaderScroll();
        this.setupQuickNav();
        this.setupCarousels();
        this.setupExperimentCards();
        this.setupKitButtons();
        this.setupModal();
        this.updateProgressDisplay();
        this.setupSmoothScroll();
        console.log('üî¨ –ì–ª–∞–≤–Ω—ã–π —ç–∫—Ä–∞–Ω –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
    }

    // ============================================
    // –î–ê–ù–ù–´–ï: 7 –ö–û–ú–ü–õ–ï–ö–¢–û–í
    // ============================================
    initializeKits() {
        return {
            1: {
                id: 1,
                name: "–ö–æ–º–ø–ª–µ–∫—Ç ‚Ññ1: –ú–µ—Ö–∞–Ω–∏–∫–∞ - –ü–ª–æ—Ç–Ω–æ—Å—Ç—å –∏ –∞—Ä—Ö–∏–º–µ–¥–æ–≤–∞ —Å–∏–ª–∞",
                icon: "‚öñÔ∏è",
                status: "available",
                program: "base",
                experiments: 5,
                completed: 0,
                duration: "~2.5 —á–∞—Å–∞",
                description: "–ò–∑–º–µ—Ä–µ–Ω–∏–µ –ø–ª–æ—Ç–Ω–æ—Å—Ç–∏ —Ç–≤–µ—Ä–¥—ã—Ö —Ç–µ–ª –∏ –∏–∑—É—á–µ–Ω–∏–µ –∞—Ä—Ö–∏–º–µ–¥–æ–≤–æ–π —Å–∏–ª—ã –¥–ª—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ü–∏–ª–∏–Ω–¥—Ä–æ–≤ –≤ –≤–æ–¥–µ –∏ —Å–æ–ª–µ–≤—ã—Ö —Ä–∞—Å—Ç–≤–æ—Ä–∞—Ö.",
                experimentsList: [
                    "–ò–∑–º–µ—Ä–µ–Ω–∏–µ —Å—Ä–µ–¥–Ω–µ–π –ø–ª–æ—Ç–Ω–æ—Å—Ç–∏ –≤–µ—â–µ—Å—Ç–≤–∞ —Ü–∏–ª–∏–Ω–¥—Ä–æ–≤",
                    "–ò–∑–º–µ—Ä–µ–Ω–∏–µ –∞—Ä—Ö–∏–º–µ–¥–æ–≤–æ–π —Å–∏–ª—ã –¥–ª—è —Ç–µ–ª —Ä–∞–∑–Ω–æ–π –ø–ª–æ—Ç–Ω–æ—Å—Ç–∏",
                    "–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –∞—Ä—Ö–∏–º–µ–¥–æ–≤–æ–π —Å–∏–ª—ã –æ—Ç –æ–±—ä–µ–º–∞ –ø–æ–≥—Ä—É–∂–µ–Ω–Ω–æ–π —á–∞—Å—Ç–∏",
                    "–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –∞—Ä—Ö–∏–º–µ–¥–æ–≤–æ–π —Å–∏–ª—ã –æ—Ç –ø–ª–æ—Ç–Ω–æ—Å—Ç–∏ –∂–∏–¥–∫–æ—Å—Ç–∏",
                    "–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –∞—Ä—Ö–∏–º–µ–¥–æ–≤–æ–π —Å–∏–ª—ã –æ—Ç –º–∞—Å—Å—ã —Ç–µ–ª–∞"
                ]
            },
            2: {
                id: 2,
                name: "–ö–æ–º–ø–ª–µ–∫—Ç ‚Ññ2: –ú–µ—Ö–∞–Ω–∏–∫–∞ - –ü—Ä—É–∂–∏–Ω—ã, —Ç—Ä–µ–Ω–∏–µ, —Ä—ã—á–∞–≥–∏",
                icon: "üîß",
                status: "active",
                program: "base",
                experiments: 6,
                completed: 0,
                duration: "~3 —á–∞—Å–∞",
                description: "–û–ø—ã—Ç—ã –ø–æ –∑–∞–∫–æ–Ω—É –ì—É–∫–∞, —Å–∏–ª–∞–º —Ç—Ä–µ–Ω–∏—è –∏ —Ä–∞–±–æ—Ç–µ —Å–∏–ª –Ω–∞ –ø—Ä—É–∂–∏–Ω–∞—Ö, –±—Ä—É—Å–∫–µ –∏ –Ω–∞–ø—Ä–∞–≤–ª—è—é—â–∏—Ö.",
                experimentsList: [
                    "–ò–∑–º–µ—Ä–µ–Ω–∏–µ –∂—ë—Å—Ç–∫–æ—Å—Ç–∏ –ø—Ä—É–∂–∏–Ω—ã",
                    "–ò–∑–º–µ—Ä–µ–Ω–∏–µ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–∞ —Ç—Ä–µ–Ω–∏—è —Å–∫–æ–ª—å–∂–µ–Ω–∏—è",
                    "–ò–∑–º–µ—Ä–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã —Å–∏–ª—ã —Ç—Ä–µ–Ω–∏—è",
                    "–ò–∑–º–µ—Ä–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã —Å–∏–ª—ã —É–ø—Ä—É–≥–æ—Å—Ç–∏",
                    "–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π —Å–∏–ª—ã —Ç—Ä–µ–Ω–∏—è",
                    "–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —Å–∏–ª—ã —É–ø—Ä—É–≥–æ—Å—Ç–∏ –æ—Ç –¥–µ—Ñ–æ—Ä–º–∞—Ü–∏–∏"
                ]
            },
            3: {
                id: 3,
                name: "–ö–æ–º–ø–ª–µ–∫—Ç ‚Ññ3: –≠–ª–µ–∫—Ç—Ä–∏—á–µ—Å—Ç–≤–æ - –ó–∞–∫–æ–Ω—ã –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–≥–æ —Ç–æ–∫–∞",
                icon: "‚ö°",
                status: "locked",
                program: "base",
                experiments: 9,
                completed: 0,
                duration: "~4 —á–∞—Å–∞",
                description: "–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –∑–∞–∫–æ–Ω–∞ –û–º–∞, —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π —Ä–µ–∑–∏—Å—Ç–æ—Ä–æ–≤, –º–æ—â–Ω–æ—Å—Ç–∏ –∏ —Ä–∞–±–æ—Ç—ã —Ç–æ–∫–∞ –Ω–∞ –∏—Å—Ç–æ—á–Ω–∏–∫–µ Labosfera.",
                experimentsList: [
                    "–ò–∑–º–µ—Ä–µ–Ω–∏–µ —Å–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏—è —Ä–µ–∑–∏—Å—Ç–æ—Ä–∞",
                    "–ò–∑–º–µ—Ä–µ–Ω–∏–µ –º–æ—â–Ω–æ—Å—Ç–∏ —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–æ–≥–æ —Ç–æ–∫–∞",
                    "–ò–∑–º–µ—Ä–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–æ–≥–æ —Ç–æ–∫–∞",
                    "–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –∑–∞–∫–æ–Ω–∞ –û–º–∞",
                    "–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —Å–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏—è –æ—Ç –¥–ª–∏–Ω—ã –ø—Ä–æ–≤–æ–¥–Ω–∏–∫–∞",
                    "–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —Å–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏—è –æ—Ç –ø–ª–æ—â–∞–¥–∏ —Å–µ—á–µ–Ω–∏—è",
                    "–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —Å–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏—è –æ—Ç –º–∞—Ç–µ—Ä–∏–∞–ª–∞",
                    "–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤–∏–ª–∞ –Ω–∞–ø—Ä—è–∂–µ–Ω–∏–π –ø—Ä–∏ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–∏",
                    "–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤–∏–ª–∞ —Ç–æ–∫–æ–≤ –ø—Ä–∏ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–∏"
                ]
            },
            4: {
                id: 4,
                name: "–ö–æ–º–ø–ª–µ–∫—Ç ‚Ññ4: –û–ø—Ç–∏–∫–∞ - –õ–∏–Ω–∑—ã –∏ –ø—Ä–µ–ª–æ–º–ª–µ–Ω–∏–µ",
                icon: "üîç",
                status: "locked",
                program: "base",
                experiments: 6,
                completed: 0,
                duration: "~3 —á–∞—Å–∞",
                description: "–ò–∑–º–µ—Ä–µ–Ω–∏–µ –æ–ø—Ç–∏—á–µ—Å–∫–æ–π —Å–∏–ª—ã –ª–∏–Ω–∑, –∏–∑—É—á–µ–Ω–∏–µ –ø—Ä–µ–ª–æ–º–ª–µ–Ω–∏—è —Å–≤–µ—Ç–∞ –∏ —Å–ª–æ–∂–Ω—ã—Ö –æ–ø—Ç–∏—á–µ—Å–∫–∏—Ö —Å–∏—Å—Ç–µ–º.",
                experimentsList: [
                    "–ò–∑–º–µ—Ä–µ–Ω–∏–µ –æ–ø—Ç–∏—á–µ—Å–∫–æ–π —Å–∏–ª—ã —Å–æ–±–∏—Ä–∞—é—â–µ–π –ª–∏–Ω–∑—ã",
                    "–ò–∑–º–µ—Ä–µ–Ω–∏–µ —Ñ–æ–∫—É—Å–Ω–æ–≥–æ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏—è –ª–∏–Ω–∑—ã",
                    "–ò–∑–º–µ—Ä–µ–Ω–∏–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª—è –ø—Ä–µ–ª–æ–º–ª–µ–Ω–∏—è —Å—Ç–µ–∫–ª—è–Ω–Ω–æ–≥–æ –ø–æ–ª—É—Ü–∏–ª–∏–Ω–¥—Ä–∞",
                    "–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ —Å–≤–æ–π—Å—Ç–≤ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ —Å–æ–±–∏—Ä–∞—é—â–µ–π –ª–∏–Ω–∑–µ",
                    "–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ —Ñ–æ–∫—É—Å–Ω–æ–≥–æ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏—è —Å–ª–æ–∂–Ω–æ–π –æ–ø—Ç–∏—á–µ—Å–∫–æ–π —Å–∏—Å—Ç–µ–º—ã",
                    "–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É–≥–ª–∞ –ø—Ä–µ–ª–æ–º–ª–µ–Ω–∏—è –æ—Ç —É–≥–ª–∞ –ø–∞–¥–µ–Ω–∏—è"
                ]
            },
            5: {
                id: 5,
                name: "–ö–æ–º–ø–ª–µ–∫—Ç ‚Ññ5: –ú–µ—Ö–∞–Ω–∏–∫–∞ - –ö–æ–ª–µ–±–∞–Ω–∏—è –∏ –¥–≤–∏–∂–µ–Ω–∏–µ",
                icon: "üöÄ",
                status: "locked",
                program: "extended",
                experiments: 8,
                completed: 0,
                duration: "~3.5 —á–∞—Å–∞",
                description: "–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–ø—ã—Ç—ã –ø–æ –∫–∏–Ω–µ–º–∞—Ç–∏–∫–µ –∏ –∫–æ–ª–µ–±–∞–Ω–∏—è–º: –¥–≤–∏–∂–µ–Ω–∏–µ –ø–æ –Ω–∞–∫–ª–æ–Ω–Ω–æ–π –ø–ª–æ—Å–∫–æ—Å—Ç–∏, –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∏ –ø—Ä—É–∂–∏–Ω–Ω—ã–π –º–∞—è—Ç–Ω–∏–∫–∏.",
                experimentsList: [
                    "–ò–∑–º–µ—Ä–µ–Ω–∏–µ —Å—Ä–µ–¥–Ω–µ–π —Å–∫–æ—Ä–æ—Å—Ç–∏ –ø–æ –Ω–∞–∫–ª–æ–Ω–Ω–æ–π –ø–ª–æ—Å–∫–æ—Å—Ç–∏",
                    "–ò–∑–º–µ—Ä–µ–Ω–∏–µ —É—Å–∫–æ—Ä–µ–Ω–∏—è –±—Ä—É—Å–∫–∞ –Ω–∞ –Ω–∞–∫–ª–æ–Ω–Ω–æ–π –ø–ª–æ—Å–∫–æ—Å—Ç–∏",
                    "–ò–∑–º–µ—Ä–µ–Ω–∏–µ –ø–µ—Ä–∏–æ–¥–∞ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –º–∞—è—Ç–Ω–∏–∫–∞",
                    "–ò–∑–º–µ—Ä–µ–Ω–∏–µ –ø–µ—Ä–∏–æ–¥–∞ –ø—Ä—É–∂–∏–Ω–Ω–æ–≥–æ –º–∞—è—Ç–Ω–∏–∫–∞",
                    "–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å–∫–æ—Ä–µ–Ω–∏—è –æ—Ç —É–≥–ª–∞ –Ω–∞–∫–ª–æ–Ω–∞",
                    "–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –ø–µ—Ä–∏–æ–¥–∞ –º–∞—è—Ç–Ω–∏–∫–∞ –æ—Ç –¥–ª–∏–Ω—ã –Ω–∏—Ç–∏",
                    "–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –ø–µ—Ä–∏–æ–¥–∞ –ø—Ä—É–∂–∏–Ω–Ω–æ–≥–æ –º–∞—è—Ç–Ω–∏–∫–∞ –æ—Ç –º–∞—Å—Å—ã –∏ –∂—ë—Å—Ç–∫–æ—Å—Ç–∏",
                    "–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –ø–µ—Ä–∏–æ–¥–∞ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –º–∞—è—Ç–Ω–∏–∫–∞ –æ—Ç –º–∞—Å—Å—ã"
                ]
            },
            6: {
                id: 6,
                name: "–ö–æ–º–ø–ª–µ–∫—Ç ‚Ññ6: –ú–µ—Ö–∞–Ω–∏–∫–∞ - –†—ã—á–∞–≥–∏ –∏ –±–ª–æ–∫–∏",
                icon: "‚öôÔ∏è",
                status: "locked",
                program: "base",
                experiments: 4,
                completed: 0,
                duration: "~3 —á–∞—Å–∞",
                description: "–£—Å–ª–æ–≤–∏–µ —Ä–∞–≤–Ω–æ–≤–µ—Å–∏—è —Ä—ã—á–∞–≥–∞ –∏ —Ä–∞–±–æ—Ç–∞ —Å–∏–ª—ã –ø—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ –Ω–µ–ø–æ–¥–≤–∏–∂–Ω–æ–≥–æ –∏ –ø–æ–¥–≤–∏–∂–Ω–æ–≥–æ –±–ª–æ–∫–æ–≤.",
                experimentsList: [
                    "–ò–∑–º–µ—Ä–µ–Ω–∏–µ –º–æ–º–µ–Ω—Ç–∞ —Å–∏–ª—ã –Ω–∞ —Ä—ã—á–∞–≥–µ",
                    "–ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ª–æ–≤–∏—è —Ä–∞–≤–Ω–æ–≤–µ—Å–∏—è —Ä—ã—á–∞–≥–∞",
                    "–ò–∑–º–µ—Ä–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã —Å–∏–ª—ã –ø—Ä–∏ –ø–æ–¥—ä—ë–º–µ –≥—Ä—É–∑–∞ —Å –Ω–µ–ø–æ–¥–≤–∏–∂–Ω—ã–º –±–ª–æ–∫–æ–º",
                    "–ò–∑–º–µ—Ä–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã —Å–∏–ª—ã –ø—Ä–∏ –ø–æ–¥—ä—ë–º–µ –≥—Ä—É–∑–∞ —Å –ø–æ–¥–≤–∏–∂–Ω—ã–º –±–ª–æ–∫–æ–º"
                ]
            },
            7: {
                id: 7,
                name: "–ö–æ–º–ø–ª–µ–∫—Ç ‚Ññ7: –¢–µ—Ä–º–æ–¥–∏–Ω–∞–º–∏–∫–∞ - –ö–∞–ª–æ—Ä–∏–º–µ—Ç—Ä–∏—è",
                icon: "üå°Ô∏è",
                status: "locked",
                program: "extended",
                experiments: 4,
                completed: 0,
                duration: "~3 —á–∞—Å–∞",
                description: "–ö–∞–ª–æ—Ä–∏–º–µ—Ç—Ä–∏—á–µ—Å–∫–∏–µ –æ–ø—ã—Ç—ã –ø–æ —Å–º–µ—à–∏–≤–∞–Ω–∏—é –∂–∏–¥–∫–æ—Å—Ç–µ–π –∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—é —É–¥–µ–ª—å–Ω–æ–π —Ç–µ–ø–ª–æ—ë–º–∫–æ—Å—Ç–∏ –º–µ—Ç–∞–ª–ª–æ–≤.",
                experimentsList: [
                    "–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —É–¥–µ–ª—å–Ω–æ–π —Ç–µ–ø–ª–æ—ë–º–∫–æ—Å—Ç–∏ –º–µ—Ç–∞–ª–ª–∏—á–µ—Å–∫–æ–≥–æ —Ü–∏–ª–∏–Ω–¥—Ä–∞",
                    "–ò–∑–º–µ—Ä–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ç–µ–ø–ª–æ—Ç—ã, –ø–æ–ª—É—á–µ–Ω–Ω–æ–≥–æ –≤–æ–¥–æ–π",
                    "–ò–∑–º–µ—Ä–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ç–µ–ø–ª–æ—Ç—ã, –æ—Ç–¥–∞–≤–∞–µ–º–æ–≥–æ –Ω–∞–≥—Ä–µ—Ç—ã–º —Ü–∏–ª–∏–Ω–¥—Ä–æ–º",
                    "–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã —Å–º–µ—Å–∏ –ø—Ä–∏ —Ä–∞–∑–Ω—ã—Ö —É—Å–ª–æ–≤–∏—è—Ö"
                ]
            }
        };
    }

    calculateTotalExperiments(includeExtended = true) {
        return Object.values(this.kits)
            .filter(kit => includeExtended || kit.program !== 'extended')
            .reduce((sum, kit) => sum + (kit.experiments || 0), 0);
    }

    getDefaultProgress() {
        const defaultProgress = {
            totalExperiments: this.calculateTotalExperiments(true),
            baseExperiments: this.calculateTotalExperiments(false),
            completedExperiments: 0,
            kits: {}
        };

        Object.values(this.kits).forEach(kit => {
            defaultProgress.kits[kit.id] = {
                completed: 0,
                total: kit.experiments || 0,
                program: kit.program
            };
        });

        return defaultProgress;
    }

    // ============================================
    // –ü–†–û–ì–†–ï–°–°
    // ============================================
    loadProgress() {
        const defaultProgress = this.getDefaultProgress();
        
        try {
            // ‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ 1: –ü–æ–¥–¥–µ—Ä–∂–∫–∞ localStorage –±—Ä–∞—É–∑–µ—Ä–æ–º
            if (typeof Storage === 'undefined') {
                console.warn('‚ö†Ô∏è localStorage –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –±—Ä–∞—É–∑–µ—Ä–æ–º');
                return defaultProgress;
            }
            
            // ‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ 2: –î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å localStorage (–Ω–µ –ø—Ä–∏–≤–∞—Ç–Ω—ã–π —Ä–µ–∂–∏–º)
            try {
                localStorage.setItem('__test__', '1');
                localStorage.removeItem('__test__');
            } catch (testError) {
                console.warn('‚ö†Ô∏è localStorage –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (–≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–∏–≤–∞—Ç–Ω—ã–π —Ä–µ–∂–∏–º –±—Ä–∞—É–∑–µ—Ä–∞)');
                return defaultProgress;
            }
            
            // ‚úÖ –ü–æ–ø—ã—Ç–∫–∞ –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
            const saved = localStorage.getItem('lab_progress');
            if (!saved) {
                console.log('üìä –ü—Ä–æ–≥—Ä–µ—Å—Å –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é');
                return defaultProgress;
            }
            
            // ‚úÖ –ü–∞—Ä—Å–∏–Ω–≥ JSON —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫
            const parsed = JSON.parse(saved);
            const merged = {
                ...defaultProgress,
                ...parsed,
                totalExperiments: defaultProgress.totalExperiments,
                baseExperiments: defaultProgress.baseExperiments,
                kits: {
                    ...defaultProgress.kits,
                    ...(parsed.kits || {})
                }
            };

            Object.values(this.kits).forEach(kit => {
                const progress = merged.kits[kit.id] || { completed: 0 };
                merged.kits[kit.id] = {
                    ...progress,
                    total: kit.experiments || 0,
                    program: kit.program
                };
            });

            console.log('‚úÖ –ü—Ä–æ–≥—Ä–µ—Å—Å —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω');
            return merged;
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞:', error);
            return defaultProgress;
        }
    }

    saveProgress() {
        try {
            // ‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ localStorage
            if (typeof Storage === 'undefined') {
                console.warn('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å: localStorage –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è');
                return false;
            }
            
            localStorage.setItem('lab_progress', JSON.stringify(this.currentProgress));
            console.log('üíæ –ü—Ä–æ–≥—Ä–µ—Å—Å —Å–æ—Ö—Ä–∞–Ω—ë–Ω');
            return true;
            
        } catch (error) {
            // –í–æ–∑–º–æ–∂–Ω—ã–µ –æ—à–∏–±–∫–∏:
            // - QuotaExceededError: –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–µ—Å—Ç–∞
            // - SecurityError: –ø—Ä–∏–≤–∞—Ç–Ω—ã–π —Ä–µ–∂–∏–º
            console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞:', error.name, error.message);
            
            if (error.name === 'QuotaExceededError') {
                console.warn('‚ö†Ô∏è –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–µ—Å—Ç–∞ –≤ localStorage');
            }
            
            return false;
        }
    }

    updateProgressDisplay() {
        const percent = Math.round((this.currentProgress.completedExperiments / this.currentProgress.totalExperiments) * 100);
        const progressFill = document.getElementById('progressFill');
        const progressPercent = document.getElementById('progressPercent');
        const progressCount = document.getElementById('progressCount');

        if (progressFill) progressFill.style.width = percent + '%';
        if (progressPercent) progressPercent.textContent = percent + '%';
        if (progressCount) {
            progressCount.textContent = `${this.currentProgress.completedExperiments}/${this.currentProgress.totalExperiments}+`;
        }

        // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–æ–≤ —É–∑–ª–æ–≤ –ø—É—Ç–∏
        document.querySelectorAll('.path-node').forEach(node => {
            const kitId = parseInt(node.dataset.kit);
            const kitProgress = this.currentProgress.kits[kitId];
            const statusSpan = node.querySelector('.node-status');
            
            if (statusSpan && kitProgress) {
                if (this.kits[kitId].status === 'active') {
                    statusSpan.textContent = `üî• ${kitProgress.completed}/${kitProgress.total}`;
                } else if (this.kits[kitId].status === 'locked') {
                    statusSpan.textContent = `üîí ${kitProgress.completed}/${kitProgress.total || '?'}`;
                } else {
                    statusSpan.textContent = `${kitProgress.completed}/${kitProgress.total}`;
                }
            }
        });
    }

    // ============================================
    // HEADER SCROLL (–û–ü–¢–ò–ú–ò–ó–ò–†–û–í–ê–ù–û)
    // ============================================
    setupHeaderScroll() {
        const header = document.querySelector('.main-header');
        let lastScroll = 0;

        // ‚úÖ –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–Ø: Throttle –¥–æ 100ms (10 –≤—ã–∑–æ–≤–æ–≤/—Å–µ–∫ –≤–º–µ—Å—Ç–æ 60-120)
        const handleScroll = this.throttle(() => {
            const currentScroll = window.pageYOffset;
            
            if (currentScroll > 100) {
                header.classList.add('scrolled');
            } else {
                header.classList.remove('scrolled');
            }

            lastScroll = currentScroll;
        }, 100);

        // ‚úÖ –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–Ø: Passive listener –¥–ª—è –ª—É—á—à–µ–π –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
        window.addEventListener('scroll', handleScroll, { passive: true });
    }
    
    // ============================================
    // PERFORMANCE UTILITIES (Throttle/Debounce)
    // ============================================
    throttle(func, delay = 100) {
        let lastCall = 0;
        let timeoutId = null;
        
        return function throttled(...args) {
            const now = Date.now();
            const timeSinceLastCall = now - lastCall;
            
            if (timeSinceLastCall >= delay) {
                lastCall = now;
                func.apply(this, args);
            } else {
                if (timeoutId) {
                    clearTimeout(timeoutId);
                }
                
                timeoutId = setTimeout(() => {
                    lastCall = Date.now();
                    func.apply(this, args);
                }, delay - timeSinceLastCall);
            }
        };
    }
    
    debounce(func, delay = 300) {
        let timeoutId = null;
        
        return function debounced(...args) {
            if (timeoutId) {
                clearTimeout(timeoutId);
            }
            
            timeoutId = setTimeout(() => {
                func.apply(this, args);
                timeoutId = null;
            }, delay);
        };
    }

    // ============================================
    // QUICK NAVIGATION (–û–ü–¢–ò–ú–ò–ó–ò–†–û–í–ê–ù–û)
    // ============================================
    setupQuickNav() {
        const quickNav = document.getElementById('quickNav');
        const sections = document.querySelectorAll('.kit-section');
        
        // ‚úÖ –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–Ø: –ö—ç—à –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –ª–∏—à–Ω–∏—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π DOM
        let activeKitId = null;
        
        // ‚úÖ –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–Ø: –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ —Å–∞–º—É—é –≤–∏–¥–∏–º—É—é —Å–µ–∫—Ü–∏—é
        const observer = new IntersectionObserver((entries) => {
            // –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –≤–∏–¥–∏–º—ã–µ –∏ —Å–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ visibility
            const visibleEntries = entries
                .filter(e => e.isIntersecting && e.intersectionRatio > 0.5)
                .sort((a, b) => b.intersectionRatio - a.intersectionRatio);
            
            if (visibleEntries.length > 0) {
                const topEntry = visibleEntries[0];
                const kitId = topEntry.target.dataset.kitId;
                
                // ‚úÖ –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–Ø: –û–±–Ω–æ–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å
                if (kitId !== activeKitId) {
                    activeKitId = kitId;
                    this.updateActiveQuickNav(kitId);
                }
            }
        }, {
            threshold: [0.5],
            rootMargin: '-100px 0px -50% 0px'
        });

        sections.forEach(section => observer.observe(section));

        // –ö–ª–∏–∫–∏ –Ω–∞ quick nav
        document.querySelectorAll('.quick-nav-item').forEach(item => {
            item.addEventListener('click', (e) => {
                e.preventDefault();
                const targetId = item.getAttribute('href');
                const target = document.querySelector(targetId);
                
                if (target) {
                    const offset = 150;
                    const targetPosition = target.offsetTop - offset;
                    window.scrollTo({
                        top: targetPosition,
                        behavior: 'smooth'
                    });
                }
            });
        });
    }

    updateActiveQuickNav(kitId) {
        document.querySelectorAll('.quick-nav-item').forEach(item => {
            item.classList.remove('active');
        });
        
        const activeItem = document.querySelector(`.quick-nav-item[data-kit="${kitId}"]`);
        if (activeItem) {
            activeItem.classList.add('active');
        }
    }

    // ============================================
    // –ö–ê–†–£–°–ï–õ–ò (–û–ü–¢–ò–ú–ò–ó–ò–†–û–í–ê–ù–û)
    // ============================================
    setupCarousels() {
        document.querySelectorAll('.carousel-btn').forEach(btn => {
            btn.addEventListener('click', (e) => {
                const kitId = btn.dataset.kit;
                const direction = btn.classList.contains('prev') ? -1 : 1;
                const carousel = document.getElementById(`carouselKit${kitId}`);
                
                if (carousel) {
                    const scrollAmount = 300;
                    carousel.scrollBy({
                        left: scrollAmount * direction,
                        behavior: 'smooth'
                    });
                }
            });
        });

        // ‚úÖ –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–Ø: Debounce –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–Ω–æ–ø–æ–∫ + –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤
        document.querySelectorAll('.carousel-track').forEach(track => {
            // ‚úÖ –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–Ø: –ö—ç—à–∏—Ä—É–µ–º DOM —ç–ª–µ–º–µ–Ω—Ç—ã (–Ω–µ –∏—â–µ–º –∫–∞–∂–¥—ã–π —Ä–∞–∑)
            const parent = track.closest('.experiments-carousel');
            const prevBtn = parent.querySelector('.carousel-btn.prev');
            const nextBtn = parent.querySelector('.carousel-btn.next');
            
            if (!prevBtn || !nextBtn) return;
            
            // –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –∫–Ω–æ–ø–æ–∫
            const updateButtons = () => {
                const isAtStart = track.scrollLeft <= 20;
                const isAtEnd = track.scrollLeft >= track.scrollWidth - track.clientWidth - 20;
                
                // ‚úÖ –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–Ø: –ò—Å–ø–æ–ª—å–∑—É–µ–º classList –≤–º–µ—Å—Ç–æ –ø—Ä—è–º–æ–≥–æ style (–±—ã—Å—Ç—Ä–µ–µ)
                // ‚úÖ –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–Ø: –û–±–Ω–æ–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å
                if (isAtStart && prevBtn.style.opacity !== '0.3') {
                    prevBtn.style.opacity = '0.3';
                }
                if (!isAtStart && prevBtn.style.opacity !== '1') {
                    prevBtn.style.opacity = '1';
                }
                
                if (isAtEnd && nextBtn.style.opacity !== '0.3') {
                    nextBtn.style.opacity = '0.3';
                }
                if (!isAtEnd && nextBtn.style.opacity !== '1') {
                    nextBtn.style.opacity = '1';
                }
            };
            
            // ‚úÖ –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–Ø: Debounce –¥–æ 150ms + passive listener
            const debouncedUpdate = this.debounce(updateButtons, 150);
            track.addEventListener('scroll', debouncedUpdate, { passive: true });
            
            // –ù–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
            updateButtons();
        });
    }

    // ============================================
    // –ö–ê–†–¢–û–ß–ö–ò –≠–ö–°–ü–ï–†–ò–ú–ï–ù–¢–û–í
    // ============================================
    setupExperimentCards() {
        document.querySelectorAll('.experiment-card-mini').forEach(card => {
            const startBtn = card.querySelector('.btn-mini-start');
            
            if (startBtn && !startBtn.disabled) {
                startBtn.addEventListener('click', (e) => {
                    e.stopPropagation();
                    const expId = card.dataset.expId;
                    this.launchExperiment(expId);
                });
            }

            // –ö–ª–∏–∫ –Ω–∞ –∫–∞—Ä—Ç–æ—á–∫—É = –∫–ª–∏–∫ –Ω–∞ –∫–Ω–æ–ø–∫—É
            card.addEventListener('click', () => {
                if (startBtn && !startBtn.disabled) {
                    startBtn.click();
                }
            });
        });
    }

    launchExperiment(expId) {
        console.log(`üöÄ –ó–∞–ø—É—Å–∫ —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞: ${expId}`);
        
        // –ê–Ω–∏–º–∞—Ü–∏—è –∑–∞–ø—É—Å–∫–∞
        const card = document.querySelector(`[data-exp-id="${expId}"]`);
        if (card) {
            card.style.transform = 'scale(0.95)';
            setTimeout(() => {
                card.style.transform = '';
            }, 200);
        }

        // –ü–µ—Ä–µ—Ö–æ–¥ –∫ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–º—É —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç—É
        setTimeout(() => {
            // –ú–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏—è —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–æ–≤
            const experimentRoutes = {
                '2-1': 'experiments/kit2/experiment-1-spring.html',
                // –ë—É–¥—É—â–∏–µ —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç—ã –±—É–¥—É—Ç –¥–æ–±–∞–≤–ª–µ–Ω—ã –∑–¥–µ—Å—å
                // '2-2': 'experiments/kit2/experiment-2-pendulum.html',
                // '2-3': 'experiments/kit2/experiment-3-spring-pendulum.html',
                // –∏ —Ç.–¥.
            };

            const route = experimentRoutes[expId];
            
            if (route) {
                // –ü–µ—Ä–µ—Ö–æ–¥ –∫ –≥–æ—Ç–æ–≤–æ–º—É —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç—É
                window.location.href = route;
            } else {
                // –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è –µ—â—ë –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–æ–≤
                alert(`–≠–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç ${expId} –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ.\n\n‚úÖ –£–∂–µ –¥–æ—Å—Ç—É–ø–µ–Ω: –û–ø—ã—Ç 2-1 (–ò–∑–º–µ—Ä–µ–Ω–∏–µ –∂—ë—Å—Ç–∫–æ—Å—Ç–∏ –ø—Ä—É–∂–∏–Ω—ã)\n\nüîú –°–∫–æ—Ä–æ: –û—Å—Ç–∞–ª—å–Ω—ã–µ –æ–ø—ã—Ç—ã –ö–æ–º–ø–ª–µ–∫—Ç–∞ ‚Ññ2`);
            }
        }, 300);
    }

    // ============================================
    // –ö–ù–û–ü–ö–ò –ö–û–ú–ü–õ–ï–ö–¢–û–í
    // ============================================
    setupKitButtons() {
        // –ö–Ω–æ–ø–∫–∞ "–ù–∞—á–∞—Ç—å –æ–±—É—á–µ–Ω–∏–µ" –≤ Hero
        const startLearningBtn = document.getElementById('startLearningBtn');
        if (startLearningBtn) {
            startLearningBtn.addEventListener('click', () => {
                // –°–∫—Ä–æ–ª–ª –∫ –∞–∫—Ç–∏–≤–Ω–æ–º—É –∫–æ–º–ø–ª–µ–∫—Ç—É (‚Ññ2)
                const kit2 = document.getElementById('kit2');
                if (kit2) {
                    kit2.scrollIntoView({ behavior: 'smooth', block: 'start' });
                }
            });
        }

        // –ö–Ω–æ–ø–∫–∞ "–û –ø—Ä–æ–µ–∫—Ç–µ"
        const aboutProjectBtn = document.getElementById('aboutProjectBtn');
        if (aboutProjectBtn) {
            aboutProjectBtn.addEventListener('click', () => {
                this.showAboutModal();
            });
        }

        // –ö–Ω–æ–ø–∫–∏ "–ù–∞—á–∞—Ç—å —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç—ã"
        document.querySelectorAll('.btn-start-kit').forEach(btn => {
            btn.addEventListener('click', () => {
                const kitId = btn.dataset.kit;
                const firstCard = document.querySelector(`#kit${kitId} .experiment-card-mini[data-status="available"]`);
                
                if (firstCard) {
                    firstCard.scrollIntoView({ behavior: 'smooth', block: 'center' });
                    
                    // –ü–æ–¥—Å–≤–µ—Ç–∫–∞
                    firstCard.style.boxShadow = '0 0 40px rgba(0, 168, 107, 0.6)';
                    setTimeout(() => {
                        firstCard.style.boxShadow = '';
                    }, 2000);
                }
            });
        });

        // –ö–Ω–æ–ø–∫–∏ "–û –∫–æ–º–ø–ª–µ–∫—Ç–µ"
        document.querySelectorAll('.btn-kit-info').forEach(btn => {
            btn.addEventListener('click', () => {
                const kitId = parseInt(btn.dataset.kit);
                this.showKitInfo(kitId);
            });
        });

        // –ö–Ω–æ–ø–∫–∏ "–£–≤–µ–¥–æ–º–∏—Ç—å –æ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏"
        document.querySelectorAll('.btn-notify').forEach(btn => {
            btn.addEventListener('click', () => {
                this.notifyMe(btn);
            });
        });
    }

    notifyMe(btn) {
        btn.textContent = '‚úì –í—ã –ø–æ–ª—É—á–∏—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ';
        btn.style.background = 'rgba(0, 168, 107, 0.3)';
        btn.style.borderColor = 'var(--primary-green)';
        btn.disabled = true;

        // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ localStorage
        const section = btn.closest('.kit-section');
        const kitId = section.dataset.kitId;
        const notifications = JSON.parse(localStorage.getItem('lab_notifications') || '[]');
        
        if (!notifications.includes(kitId)) {
            notifications.push(kitId);
            localStorage.setItem('lab_notifications', JSON.stringify(notifications));
        }

        console.log(`üîî –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥–ª—è –∫–æ–º–ø–ª–µ–∫—Ç–∞ ${kitId}`);
    }

    // ============================================
    // –ú–û–î–ê–õ–¨–ù–û–ï –û–ö–ù–û
    // ============================================
    setupModal() {
        const modal = document.getElementById('kitInfoModal');
        const overlay = modal.querySelector('.modal-overlay');
        const closeBtn = document.getElementById('modalClose');

        const closeModal = () => {
            modal.classList.remove('active');
        };

        if (overlay) overlay.addEventListener('click', closeModal);
        if (closeBtn) closeBtn.addEventListener('click', closeModal);

        // ESC –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è
        document.addEventListener('keydown', (e) => {
            if (e.key === 'Escape' && modal.classList.contains('active')) {
                closeModal();
            }
        });
    }

    showKitInfo(kitId) {
        const kit = this.kits[kitId];
        if (!kit) return;

        const modal = document.getElementById('kitInfoModal');
        const title = document.getElementById('modalTitle');
        const body = document.getElementById('modalBody');

        title.textContent = `${kit.icon} ${kit.name}`;

        let experimentsHTML = '';
        if (kit.experimentsList && kit.experimentsList.length) {
            experimentsHTML = `
                <h3>–≠–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç—ã –∫–æ–º–ø–ª–µ–∫—Ç–∞:</h3>
                <ul style="list-style: none; padding: 0;">
                    ${kit.experimentsList.map((exp, i) => `
                        <li style="padding: 8px 0; border-bottom: 1px solid rgba(255,255,255,0.1);">
                            <strong>${i + 1}.</strong> ${escapeHtml(exp)}
                        </li>
                    `).join('')}
                </ul>
            `;
        }

        const programLabel = kit.program === 'extended'
            ? 'üîµ –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ (–û–ì–≠ 2026+)'
            : 'üü¢ –û—Å–Ω–æ–≤–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ (–û–ì–≠ 2025)';

        const statusMessage = kit.status === 'active'
            ? 'üî• <span style="color: var(--primary-green);">–ê–ö–¢–ò–í–ù–´–ô - –î–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è</span>'
            : kit.status === 'available'
                ? '‚óã –î–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è'
                : kit.program === 'extended'
                    ? 'üîµ –í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ (—Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞)'
                    : 'üîí –í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ';

        // ‚úÖ –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ innerHTML —Å —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ–º
        body.innerHTML = `
            <div style="line-height: 1.8;">
                <p style="font-size: 16px; color: var(--text-secondary); margin-bottom: 20px;">
                    ${escapeHtml(kit.description)}
                </p>
                
                <div style="display: grid; grid-template-columns: repeat(2, 1fr); gap: 16px; margin-bottom: 24px;">
                    <div style="padding: 16px; background: var(--glass-bg); border-radius: 12px;">
                        <div style="font-size: 28px; font-weight: 700; color: var(--primary-blue);">
                            ${escapeHtml(kit.experiments || '?')}
                        </div>
                        <div style="font-size: 14px; color: var(--text-muted);">–≠–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–æ–≤</div>
                    </div>
                    <div style="padding: 16px; background: var(--glass-bg); border-radius: 12px;">
                        <div style="font-size: 28px; font-weight: 700; color: var(--primary-green);">
                            ${escapeHtml(kit.duration)}
                        </div>
                        <div style="font-size: 14px; color: var(--text-muted);">–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å</div>
                    </div>
                </div>

                ${experimentsHTML}

                <div style="margin-top: 24px; padding: 16px; background: rgba(0, 102, 204, 0.1); border-left: 4px solid var(--primary-blue); border-radius: 8px;">
                    <div><strong>üéì –ü—Ä–æ–≥—Ä–∞–º–º–∞:</strong> ${escapeHtml(programLabel)}</div>
                    <div style="margin-top: 8px;"><strong>üìñ –°—Ç–∞—Ç—É—Å:</strong> ${statusMessage}</div>
                </div>
            </div>
        `;

        modal.classList.add('active');
    }

    showAboutModal() {
        const modal = document.getElementById('kitInfoModal');
        const title = document.getElementById('modalTitle');
        const body = document.getElementById('modalBody');

        title.textContent = 'üìñ –û –ø—Ä–æ–µ–∫—Ç–µ';

        // ‚úÖ –°—Ç–∞—Ç–∏—á–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç - –±–µ–∑–æ–ø–∞—Å–Ω–æ –¥–ª—è innerHTML (–±–µ–∑ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –≤–≤–æ–¥–∞)
        body.innerHTML = `
            <div style="line-height: 1.8;">
                <h3 style="margin-bottom: 16px;">–í–∏—Ä—Ç—É–∞–ª—å–Ω–∞—è –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏—è —Ñ–∏–∑–∏–∫–∏ –¥–ª—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –∫ –û–ì–≠ 2025</h3>
                
                <p style="font-size: 16px; color: var(--text-secondary); margin-bottom: 20px;">
                    –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –æ–±—É—á–∞—é—â–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ —Å –ø–æ–ª–Ω—ã–º –Ω–∞–±–æ—Ä–æ–º —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–æ–≤ 
                    –ø–æ —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–∏ –§–ò–ü–ò —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è Labosfera.
                </p>

                <h4 style="margin: 24px 0 12px 0;">‚ú® –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –ø—Ä–æ–µ–∫—Ç–∞:</h4>
                <ul style="color: var(--text-secondary); margin-bottom: 24px;">
                    <li>üî¨ <strong>7 –∫–æ–º–ø–ª–µ–∫—Ç–æ–≤ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è</strong> - –ø–æ–ª–Ω–æ–µ –ø–æ–∫—Ä—ã—Ç–∏–µ —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–∏ –§–ò–ü–ò</li>
                    <li>üéØ <strong>42 –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã—Ö —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞</strong> - 30 –±–∞–∑–æ–≤—ã—Ö + 12 —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã—Ö</li>
                    <li>üì∏ <strong>–†–µ–∞–ª—å–Ω—ã–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è</strong> - –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω–æ—Å—Ç—å</li>
                    <li>üí° <strong>–ò–Ω—Ç—É–∏—Ç–∏–≤–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å</strong> - Netflix-style –Ω–∞–≤–∏–≥–∞—Ü–∏—è</li>
                    <li>üìä <strong>–û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞</strong> - –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –ø—É—Ç–∏ –æ–±—É—á–µ–Ω–∏—è</li>
                    <li>üì± <strong>–ê–¥–∞–ø—Ç–∏–≤–Ω—ã–π –¥–∏–∑–∞–π–Ω</strong> - —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ –≤—Å–µ—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö</li>
                </ul>

                <h4 style="margin: 24px 0 12px 0;">üî¨ –û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ Labosfera:</h4>
                <p style="color: var(--text-secondary); margin-bottom: 24px;">
                    –í—Å–µ —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç—ã –æ—Å–Ω–æ–≤–∞–Ω—ã –Ω–∞ —Ä–µ–∞–ª—å–Ω–æ–º –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–æ–º –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–∞–Ω–∏–∏ Labosfera - 
                    –≤–µ–¥—É—â–µ–≥–æ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—è —É—á–µ–±–Ω–æ–≥–æ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è –¥–ª—è —Ä–æ—Å—Å–∏–π—Å–∫–∏—Ö —à–∫–æ–ª.
                </p>

                <div style="margin-top: 24px; padding: 16px; background: var(--glass-bg); border-radius: 12px;">
                    <p style="text-align: center; margin: 0;">
                        <strong>üåê –û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Å–∞–π—Ç:</strong><br>
                        <a href="https://labosfera.ru" target="_blank" 
                           style="color: var(--primary-blue); text-decoration: none; font-size: 18px;">
                            www.labosfera.ru
                        </a>
                    </p>
                </div>
            </div>
        `;

        modal.classList.add('active');
    }

    // ============================================
    // SMOOTH SCROLL
    // ============================================
    setupSmoothScroll() {
        document.querySelectorAll('a[href^="#"]').forEach(anchor => {
            anchor.addEventListener('click', function (e) {
                const href = this.getAttribute('href');
                if (href === '#') return;
                
                e.preventDefault();
                const target = document.querySelector(href);
                
                if (target) {
                    const offset = 150;
                    const targetPosition = target.offsetTop - offset;
                    window.scrollTo({
                        top: targetPosition,
                        behavior: 'smooth'
                    });
                }
            });
        });
    }
}

// ============================================
// FREEMIUM MODEL FUNCTIONS
// ============================================

/**
 * –ü–æ–∫–∞–∑–∞—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∞–ø–≥—Ä–µ–π–¥–∞
 */
function showUpgradeModal() {
    const modal = document.getElementById('upgradeModal');
    if (modal) {
        modal.classList.add('active');
        document.body.style.overflow = 'hidden';
        
        // –ê–Ω–∞–ª–∏—Ç–∏–∫–∞: —Ç—Ä–µ–∫–∞–µ–º –ø–æ–ø—ã—Ç–∫—É –¥–æ—Å—Ç—É–ø–∞ –∫ –ø—Ä–µ–º–∏—É–º –∫–æ–Ω—Ç–µ–Ω—Ç—É
        console.log('üìä –ü–æ–∫–∞–∑–∞–Ω–æ upgrade –æ–∫–Ω–æ');
    }
}

/**
 * –ó–∞–∫—Ä—ã—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∞–ø–≥—Ä–µ–π–¥–∞
 */
function closeUpgradeModal() {
    const modal = document.getElementById('upgradeModal');
    if (modal) {
        modal.classList.remove('active');
        document.body.style.overflow = '';
    }
}

/**
 * –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–∫—É–ø–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏
 */
function handleUpgrade(tier) {
    console.log(`üí≥ –ü–µ—Ä–µ—Ö–æ–¥ –∫ –æ–ø–ª–∞—Ç–µ —Ç–∞—Ä–∏—Ñ–∞: ${tier}`);
    
    // TODO: –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –ø–ª–∞—Ç–µ–∂–Ω–æ–π —Å–∏—Å—Ç–µ–º–æ–π
    // –í–∞—Ä–∏–∞–Ω—Ç—ã: –ÆKassa, CloudPayments, Stripe
    
    alert(`üöÄ –ü–µ—Ä–µ—Ö–æ–¥ –∫ –æ–ø–ª–∞—Ç–µ —Ç–∞—Ä–∏—Ñ–∞ "${tier.toUpperCase()}"
    
–í production –≤–µ—Ä—Å–∏–∏ –∑–¥–µ—Å—å –±—É–¥–µ—Ç:
‚Ä¢ –§–æ—Ä–º–∞ –æ–ø–ª–∞—Ç—ã (–ÆKassa/CloudPayments)
‚Ä¢ –°–æ–∑–¥–∞–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–∞
‚Ä¢ –ú–æ–º–µ–Ω—Ç–∞–ª—å–Ω–∞—è –∞–∫—Ç–∏–≤–∞—Ü–∏—è –¥–æ—Å—Ç—É–ø–∞

–°—Ç–æ–∏–º–æ—Å—Ç—å: 990 ‚ÇΩ –∑–∞ –ø–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø –Ω–∞ –≥–æ–¥`);
    
    // –í—Ä–µ–º–µ–Ω–Ω–æ: —Å–∏–º—É–ª—è—Ü–∏—è —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–∏
    // unlockProAccess();
}

/**
 * –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ PRO –¥–æ—Å—Ç—É–ø–∞ (–ø–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã)
 */
function unlockProAccess() {
    localStorage.setItem('labosfera_subscription', 'pro');
    localStorage.setItem('labosfera_subscription_date', new Date().toISOString());
    
    closeUpgradeModal();
    
    // –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    alert('üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! PRO –¥–æ—Å—Ç—É–ø –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!\n\n–í—Å–µ 33+ —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞ —Ç–µ–ø–µ—Ä—å –¥–æ—Å—Ç—É–ø–Ω—ã.');
    
    // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
    location.reload();
}

/**
 * –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–¥–ø–∏—Å–∫–∏
 */
function checkSubscriptionStatus() {
    const subscription = localStorage.getItem('labosfera_subscription');
    const subscriptionDate = localStorage.getItem('labosfera_subscription_date');
    
    if (subscription === 'pro' && subscriptionDate) {
        const purchaseDate = new Date(subscriptionDate);
        const now = new Date();
        const daysPassed = (now - purchaseDate) / (1000 * 60 * 60 * 24);
        
        // –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –≥–æ–¥ (365 –¥–Ω–µ–π)
        if (daysPassed < 365) {
            return { status: 'pro', daysLeft: Math.ceil(365 - daysPassed) };
        } else {
            // –ü–æ–¥–ø–∏—Å–∫–∞ –∏—Å—Ç–µ–∫–ª–∞
            localStorage.removeItem('labosfera_subscription');
            localStorage.removeItem('labosfera_subscription_date');
            return { status: 'free', daysLeft: 0 };
        }
    }
    
    return { status: 'free', daysLeft: 0 };
}

/**
 * –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç—É
 */
function canAccessExperiment(expId) {
    const subscription = checkSubscriptionStatus();
    
    // –ü–µ—Ä–≤—ã–π —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç –∫–æ–º–ø–ª–µ–∫—Ç–∞ ‚Ññ2 –≤—Å–µ–≥–¥–∞ –±–µ—Å–ø–ª–∞—Ç–µ–Ω
    if (expId === '2-1') {
        return true;
    }
    
    // –û—Å—Ç–∞–ª—å–Ω–æ–µ —Ç—Ä–µ–±—É–µ—Ç PRO
    return subscription.status === 'pro';
}

/**
 * –°–≤—è–∑—å –¥–ª—è —à–∫–æ–ª
 */
function contactSchool() {
    window.location.href = 'mailto:school@labosfera.ru?subject=–ó–∞—è–≤–∫–∞ –Ω–∞ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π –¥–æ—Å—Ç—É–ø&body=–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –ò–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π –¥–æ—Å—Ç—É–ø –¥–ª—è —à–∫–æ–ª—ã.';
}

// ============================================
// –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –ü–†–ò –ó–ê–ì–†–£–ó–ö–ï
// ============================================
document.addEventListener('DOMContentLoaded', () => {
    console.log('üî¨ –ó–∞–≥—Ä—É–∑–∫–∞ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–π –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏–∏ —Ñ–∏–∑–∏–∫–∏...');
    window.mainScreenController = new MainScreenController();
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–¥–ø–∏—Å–∫–∏
    const subscription = checkSubscriptionStatus();
    console.log(`üíé –°—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏: ${subscription.status.toUpperCase()}`);
    if (subscription.status === 'pro') {
        console.log(`‚è∞ –û—Å—Ç–∞–ª–æ—Å—å –¥–Ω–µ–π: ${subscription.daysLeft}`);
    }
    
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–Ω–æ–ø–æ–∫ freemium
    document.getElementById('startFreeBtn')?.addEventListener('click', () => {
        window.location.href = 'experiments/kit2/experiment-1-spring.html';
    });
    
    document.getElementById('viewPricingBtn')?.addEventListener('click', () => {
        document.getElementById('pricing')?.scrollIntoView({ behavior: 'smooth' });
    });
    
    document.getElementById('upgradePremiumBtn')?.addEventListener('click', showUpgradeModal);
    
    // –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∫–æ–Ω—Å–æ–ª–∏
    console.log('%cüî¨ –í–ò–†–¢–£–ê–õ–¨–ù–ê–Ø –õ–ê–ë–û–†–ê–¢–û–†–ò–Ø –§–ò–ó–ò–ö–ò', 
        'font-size: 20px; font-weight: bold; color: #0066CC;');
    console.log('%cLabosfera √ó –û–ì–≠ 2025 ‚Ä¢ FREEMIUM', 
        'font-size: 14px; color: #00A86B;');
    console.log('–í–µ—Ä—Å–∏—è: 2.0.0 (Freemium Model)');
    console.log('üéÅ 1 –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç ‚Ä¢ üíé 33+ –≤ PRO');
    console.log('');
    console.log('%c‚ö° –ü–†–û–ò–ó–í–û–î–ò–¢–ï–õ–¨–ù–û–°–¢–¨ –û–ü–¢–ò–ú–ò–ó–ò–†–û–í–ê–ù–ê', 
        'font-size: 12px; font-weight: bold; color: #FFD700; background: #1a1a2e; padding: 4px 8px;');
    console.log('‚úÖ Throttled scroll (100ms)');
    console.log('‚úÖ Optimized IntersectionObserver');
    console.log('‚úÖ Debounced carousel updates (150ms)');
    console.log('‚úÖ Passive event listeners');
});

// ============================================
// –≠–ö–°–ü–û–†–¢
// ============================================
if (typeof module !== 'undefined' && module.exports) {
    module.exports = MainScreenController;
}
