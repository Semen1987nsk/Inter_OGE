// üß™ –ü–û–õ–ù–´–ô –¢–ï–°–¢ –í–°–ï–• 46 –ö–û–ú–ë–ò–ù–ê–¶–ò–ô –ü–†–£–ñ–ò–ù –ò –ì–†–£–ó–û–í

const g = 9.8; // –º/—Å¬≤

// –ü—Ä—É–∂–∏–Ω—ã
const springs = {
    spring50: { name: '–ü—Ä—É–∂–∏–Ω–∞ ‚Ññ1', k: 50 },
    spring10: { name: '–ü—Ä—É–∂–∏–Ω–∞ ‚Ññ2', k: 10 }
};

// –§–æ—Ä–º—É–ª—ã
function calcForce(massG) {
    return (massG / 1000) * g;
}

function calcElongation(force, k) {
    return (force / k) * 100; // —Å–º
}

function calcStiffness(force, elongationCm) {
    return force / (elongationCm / 100);
}

// –ú–∞—Ç—Ä–∏—Ü–∞ —Ç–µ—Å—Ç–æ–≤
const testMatrix = [
    // ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
    // –ü–†–£–ñ–ò–ù–ê ‚Ññ1 (50 –ù/–º)
    // ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
    
    // –û–±—ã—á–Ω—ã–µ –≥—Ä—É–∑—ã
    { spring: 'spring50', desc: '1 √ó 100–≥', mass: 100 },
    { spring: 'spring50', desc: '2 √ó 100–≥', mass: 200 },
    { spring: 'spring50', desc: '3 √ó 100–≥', mass: 300 },
    { spring: 'spring50', desc: '1 √ó 50–≥', mass: 50 },
    { spring: 'spring50', desc: '2 √ó 50–≥', mass: 100 },
    { spring: 'spring50', desc: '3 √ó 50–≥', mass: 150 },
    { spring: 'spring50', desc: '1 √ó 200–≥', mass: 200 },
    { spring: 'spring50', desc: '100–≥ + 50–≥', mass: 150 },
    { spring: 'spring50', desc: '100–≥ + 100–≥ + 50–≥', mass: 250 },
    
    // –°–±–æ—Ä–Ω—ã–µ –≥—Ä—É–∑—ã (—à—Ç–∞–Ω–≥–∞ + –¥–∏—Å–∫–∏)
    { spring: 'spring50', desc: '‚ö†Ô∏è –®—Ç–∞–Ω–≥–∞ 10–≥ (–ë–ê–ì!)', mass: 10, bug: true },
    { spring: 'spring50', desc: '–®—Ç–∞–Ω–≥–∞ + 1√ó–î–∏—Å–∫ 10–≥', mass: 20 },
    { spring: 'spring50', desc: '–®—Ç–∞–Ω–≥–∞ + 2√ó–î–∏—Å–∫ 10–≥', mass: 30 },
    { spring: 'spring50', desc: '–®—Ç–∞–Ω–≥–∞ + 1√ó–î–∏—Å–∫ 20–≥', mass: 30 },
    { spring: 'spring50', desc: '–®—Ç–∞–Ω–≥–∞ + 2√ó–î–∏—Å–∫ 20–≥', mass: 50 },
    { spring: 'spring50', desc: '–®—Ç–∞–Ω–≥–∞ + 1√ó–î–∏—Å–∫ 50–≥', mass: 60 },
    { spring: 'spring50', desc: '–®—Ç–∞–Ω–≥–∞ + 2√ó–î–∏—Å–∫ 50–≥', mass: 110 },
    { spring: 'spring50', desc: '–®—Ç–∞–Ω–≥–∞ + 3√ó–î–∏—Å–∫ 50–≥', mass: 160 },
    { spring: 'spring50', desc: '–®—Ç–∞–Ω–≥–∞ + –î–∏—Å–∫ 10–≥ + –î–∏—Å–∫ 20–≥', mass: 40 },
    { spring: 'spring50', desc: '–®—Ç–∞–Ω–≥–∞ + –î–∏—Å–∫ 10–≥ + –î–∏—Å–∫ 50–≥', mass: 70 },
    { spring: 'spring50', desc: '–®—Ç–∞–Ω–≥–∞ + –î–∏—Å–∫ 20–≥ + –î–∏—Å–∫ 50–≥', mass: 80 },
    { spring: 'spring50', desc: '–®—Ç–∞–Ω–≥–∞ + –≤—Å–µ –¥–∏—Å–∫–∏ (10+20+50)', mass: 90 },
    
    // –°–º–µ—à–∞–Ω–Ω—ã–µ –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏
    { spring: 'spring50', desc: '100–≥ + –®—Ç–∞–Ω–≥–∞', mass: 110 },
    { spring: 'spring50', desc: '100–≥ + (–®—Ç–∞–Ω–≥–∞ + –î–∏—Å–∫ 50–≥)', mass: 160 },
    { spring: 'spring50', desc: '50–≥ + (–®—Ç–∞–Ω–≥–∞ + –î–∏—Å–∫ 20–≥)', mass: 80 },
    { spring: 'spring50', desc: '2√ó100–≥ + –®—Ç–∞–Ω–≥–∞', mass: 210 },
    
    // ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
    // –ü–†–£–ñ–ò–ù–ê ‚Ññ2 (10 –ù/–º)
    // ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
    
    // –û–±—ã—á–Ω—ã–µ –≥—Ä—É–∑—ã
    { spring: 'spring10', desc: '1 √ó 100–≥', mass: 100 },
    { spring: 'spring10', desc: '2 √ó 100–≥', mass: 200 },
    { spring: 'spring10', desc: '3 √ó 100–≥', mass: 300 },
    { spring: 'spring10', desc: '1 √ó 50–≥', mass: 50 },
    { spring: 'spring10', desc: '2 √ó 50–≥', mass: 100 },
    { spring: 'spring10', desc: '3 √ó 50–≥', mass: 150 },
    { spring: 'spring10', desc: '1 √ó 200–≥', mass: 200 },
    { spring: 'spring10', desc: '100–≥ + 50–≥', mass: 150 },
    
    // –°–±–æ—Ä–Ω—ã–µ –≥—Ä—É–∑—ã (—à—Ç–∞–Ω–≥–∞ + –¥–∏—Å–∫–∏)
    { spring: 'spring10', desc: '–®—Ç–∞–Ω–≥–∞ 10–≥', mass: 10 },
    { spring: 'spring10', desc: '–®—Ç–∞–Ω–≥–∞ + 1√ó–î–∏—Å–∫ 10–≥', mass: 20 },
    { spring: 'spring10', desc: '–®—Ç–∞–Ω–≥–∞ + 2√ó–î–∏—Å–∫ 10–≥', mass: 30 },
    { spring: 'spring10', desc: '–®—Ç–∞–Ω–≥–∞ + 1√ó–î–∏—Å–∫ 20–≥', mass: 30 },
    { spring: 'spring10', desc: '–®—Ç–∞–Ω–≥–∞ + 2√ó–î–∏—Å–∫ 20–≥', mass: 50 },
    { spring: 'spring10', desc: '–®—Ç–∞–Ω–≥–∞ + 1√ó–î–∏—Å–∫ 50–≥', mass: 60 },
    { spring: 'spring10', desc: '–®—Ç–∞–Ω–≥–∞ + 2√ó–î–∏—Å–∫ 50–≥', mass: 110 },
    { spring: 'spring10', desc: '–®—Ç–∞–Ω–≥–∞ + 3√ó–î–∏—Å–∫ 50–≥', mass: 160 },
    { spring: 'spring10', desc: '–®—Ç–∞–Ω–≥–∞ + –≤—Å–µ –¥–∏—Å–∫–∏ (10+20+50)', mass: 90 },
    
    // –°–º–µ—à–∞–Ω–Ω—ã–µ –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏
    { spring: 'spring10', desc: '100–≥ + –®—Ç–∞–Ω–≥–∞', mass: 110 },
    { spring: 'spring10', desc: '100–≥ + (–®—Ç–∞–Ω–≥–∞ + –î–∏—Å–∫ 50–≥)', mass: 160 },
    { spring: 'spring10', desc: '50–≥ + (–®—Ç–∞–Ω–≥–∞ + –î–∏—Å–∫ 20–≥)', mass: 80 },
    { spring: 'spring10', desc: '2√ó100–≥ + –®—Ç–∞–Ω–≥–∞', mass: 210 }
];

console.log('‚ïê'.repeat(100));
console.log('üß™ –ü–û–õ–ù–´–ô –¢–ï–°–¢ –í–°–ï–• 46 –ö–û–ú–ë–ò–ù–ê–¶–ò–ô –ü–†–£–ñ–ò–ù –ò –ì–†–£–ó–û–í');
console.log('‚ïê'.repeat(100));

let testNumber = 1;
let currentSpring = null;
let bugCount = 0;

testMatrix.forEach(test => {
    const springData = springs[test.spring];
    const k = springData.k;
    
    // –ó–∞–≥–æ–ª–æ–≤–æ–∫ –¥–ª—è –Ω–æ–≤–æ–π –ø—Ä—É–∂–∏–Ω—ã
    if (currentSpring !== test.spring) {
        currentSpring = test.spring;
        console.log('\n' + '‚îÄ'.repeat(100));
        console.log(`\nüìç ${springData.name.toUpperCase()} (${k} –ù/–º)\n`);
        console.log('‚îÄ'.repeat(100));
        console.log(`${'‚Ññ'.padStart(3)} | ${'–ö–æ–º–±–∏–Ω–∞—Ü–∏—è'.padEnd(35)} | ${'–ú–∞—Å—Å–∞'.padStart(7)} | ${'F (–ù)'.padStart(8)} | ${'Œîl (—Å–º)'.padStart(9)} | ${'k (–ù/–º)'.padStart(8)} | –°—Ç–∞—Ç—É—Å`);
        console.log('‚îÄ'.repeat(100));
    }
    
    // –†–∞—Å—á–µ—Ç
    const force = calcForce(test.mass);
    const elongationCm = calcElongation(force, k);
    const calculatedK = calcStiffness(force, elongationCm);
    const error = Math.abs(calculatedK - k);
    const status = error < 0.01 ? '‚úÖ' : '‚ùå';
    
    if (error >= 0.01) bugCount++;
    
    // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
    const num = testNumber.toString().padStart(3);
    const desc = test.desc.padEnd(35);
    const mass = `${test.mass}–≥`.padStart(7);
    const forceStr = force.toFixed(3).padStart(8);
    const elongStr = elongationCm.toFixed(3).padStart(9);
    const kStr = calculatedK.toFixed(1).padStart(8);
    
    // –û—Å–æ–±–æ–µ –≤—ã–¥–µ–ª–µ–Ω–∏–µ –¥–ª—è –±–∞–≥–∞
    const marker = test.bug ? '‚ö†Ô∏è  ' : '   ';
    
    console.log(`${marker}${num} | ${desc} | ${mass} | ${forceStr} | ${elongStr} | ${kStr} | ${status}`);
    
    testNumber++;
});

console.log('\n' + '‚ïê'.repeat(100));
console.log(`\nüìä –ò–¢–û–ì–û–í–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:`);
console.log(`   –í—Å–µ–≥–æ —Ç–µ—Å—Ç–æ–≤: ${testMatrix.length}`);
console.log(`   ‚úÖ –£—Å–ø–µ—à–Ω–æ: ${testMatrix.length - bugCount}`);
console.log(`   ‚ùå –û—à–∏–±–æ–∫ (–º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö): ${bugCount}`);
console.log(`\nüí° –í–ê–ñ–ù–û: –í—Å–µ —Ç–µ—Å—Ç—ã –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç ‚úÖ –≤ –º–∞—Ç–µ–º–∞—Ç–∏–∫–µ!`);
console.log(`   –ï—Å–ª–∏ –≤ —Ä–µ–∞–ª—å–Ω–æ–º —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–µ —à—Ç–∞–Ω–≥–∞ –¥–∞–µ—Ç k=195 –ù/–º –≤–º–µ—Å—Ç–æ 50 –ù/–º,`);
console.log(`   –∑–Ω–∞—á–∏—Ç –ø—Ä–æ–±–ª–µ–º–∞ –≤ –ö–û–î–ï, –∞ –Ω–µ –≤ —Ñ–æ—Ä–º—É–ª–∞—Ö.\n`);

console.log('üîç –ö–õ–Æ–ß–ï–í–´–ï –ó–ù–ê–ß–ï–ù–ò–Ø –î–õ–Ø –ü–†–û–í–ï–†–ö–ò –í –ö–û–î–ï:\n');
console.log('   –®—Ç–∞–Ω–≥–∞ 10–≥ –Ω–∞ –ü—Ä—É–∂–∏–Ω–µ ‚Ññ1 (50 –ù/–º):');
console.log('      –û–∂–∏–¥–∞–µ–º–æ–µ —É–¥–ª–∏–Ω–µ–Ω–∏–µ: 0.196 —Å–º (–æ—á–µ–Ω—å –º–∞–ª–µ–Ω—å–∫–æ–µ!)');
console.log('      –û–∂–∏–¥–∞–µ–º–∞—è —Å–∏–ª–∞: 0.098 –ù');
console.log('      –û–∂–∏–¥–∞–µ–º–∞—è –∂–µ—Å—Ç–∫–æ—Å—Ç—å: 50.0 –ù/–º');
console.log('      –§–∞–∫—Ç–∏—á–µ—Å–∫–∞—è –∂–µ—Å—Ç–∫–æ—Å—Ç—å: 195.0 –ù/–º ‚ùå\n');
console.log('   –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:');
console.log('      1. –£–¥–ª–∏–Ω–µ–Ω–∏–µ —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ (—Å–ª–∏—à–∫–æ–º –º–∞–ª–µ–Ω—å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ)');
console.log('      2. –ú–∞—Å—Å–∞ —à—Ç–∞–Ω–≥–∏ –Ω–µ —É—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è (—Å—á–∏—Ç–∞–µ—Ç—Å—è 0)');
console.log('      3. –û—à–∏–±–∫–∞ –≤ —Ñ—É–Ω–∫—Ü–∏–∏ getTotalWeightMass() –¥–ª—è —à—Ç–∞–Ω–≥–∏ –±–µ–∑ –¥–∏—Å–∫–æ–≤');
console.log('      4. –í–∏–∑—É–∞–ª—å–Ω–æ–µ —É–¥–ª–∏–Ω–µ–Ω–∏–µ ‚â† —Ñ–∏–∑–∏—á–µ—Å–∫–æ–º—É —Ä–∞—Å—á–µ—Ç—É\n');

console.log('‚ïê'.repeat(100));
